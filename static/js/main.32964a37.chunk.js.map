{"version":3,"sources":["components/Section/Section.module.css","components/Notification/Notification.module.css","components/Feedback/FeedbackOptions.js","components/Statistic/Statistic.js","components/Section/Section.js","components/Notification/Notification.js","App.js","index.js","components/Feedback/FeedbackOptions.module.css","components/Statistic/Statistic.module.css"],"names":["module","exports","FeedbackOptions","options","onLeaveFeedback","map","el","type","className","style","button","onClick","protoType","PropTypes","array","func","Statistic","good","neutral","bad","total","positivePercentage","list","Section","title","children","string","Notification","message","text","Feedback","state","feedback","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","keys","Object","this","Number","isNaN","React","Component","ReactDom","render","StrictMode","App","document","querySelector"],"mappings":"4IACAA,EAAOC,QAAU,CAAC,MAAQ,yB,mBCA1BD,EAAOC,QAAU,CAAC,KAAO,6B,kLCGzB,SAASC,EAAT,GAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAClC,OACE,8BACGD,EAAQE,KAAI,SAAAC,GACX,OACE,wBACEC,KAAK,SACLC,UAAWC,IAAMC,OAEjBC,QAAS,kBAAMP,EAAgBE,IAJjC,SAMGA,GAHIA,QAWjBJ,EAAgBU,UAAY,CAC1BT,QAASU,IAAUC,MACnBV,gBAAiBS,IAAUE,MAGdb,Q,gBCDAc,MAvBf,YAAuE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC9C,OACE,qBAAIb,UAAWC,IAAMa,KAArB,UACE,wCAAWL,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,KACZ,qDAGsBC,EAHtB,W,iBCPN,SAASE,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,oCACE,oBAAIjB,UAAWC,IAAMe,MAArB,SAA6BA,IAC5BC,KAKPF,EAAQX,UAAY,CAClBY,MAAOX,IAAUa,QAGJH,Q,iBCbf,SAASI,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACtB,OAAO,mBAAGpB,UAAWC,IAAMoB,KAApB,SAA2BD,IAGpCD,EAAaf,UAAY,CACvBgB,QAASf,IAAUa,QAGNC,QCNTG,E,4MACJC,MAAQ,CACNd,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPf,gBAAkB,SAAA4B,GAChB,EAAKC,UAAS,SAAAC,GAAS,sBACpBF,EAAWE,EAAUF,GAAY,O,EAItCG,mBAAqB,WACnB,OAAO,EAAKJ,MAAMd,KAAO,EAAKc,MAAMb,QAAU,EAAKa,MAAMZ,K,EAG3DiB,gCAAkC,WAChC,OACEC,KAAKC,MAAO,EAAKP,MAAMd,KAAO,EAAKkB,qBAAwB,KAAQ,I,4CAIvE,WACE,IAAMI,EAAOC,OAAOD,KAAKE,KAAKV,OAE9B,OACE,qCACE,cAAC,EAAD,CAASP,MAAM,wBAAf,SACE,cAAC,EAAD,CACErB,QAASoC,EACTnC,gBAAiBqC,KAAKrC,oBAI1B,cAAC,EAAD,CAASoB,MAAM,aAAf,SACGkB,OAAOC,MAAMF,KAAKL,mCACjB,cAAC,EAAD,CAAcR,QAAQ,sBAEtB,cAAC,EAAD,CACEX,KAAMwB,KAAKV,MAAMd,KACjBC,QAASuB,KAAKV,MAAMb,QACpBC,IAAKsB,KAAKV,MAAMZ,IAChBC,MAAOqB,KAAKN,qBACZd,mBAAoBoB,KAAKL,6C,GA5ChBQ,IAAMC,WAqDdf,ICtDfgB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,EAAD,MAEFC,SAASC,cAAc,W,kBCRzBnD,EAAOC,QAAU,CAAC,OAAS,kC,kBCA3BD,EAAOC,QAAU,CAAC,KAAO,2B","file":"static/js/main.32964a37.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__1xVqY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Notification_text__Ai3yN\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './FeedbackOptions.module.css';\n\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\n  return (\n    <div>\n      {options.map(el => {\n        return (\n          <button\n            type=\"button\"\n            className={style.button}\n            key={el}\n            onClick={() => onLeaveFeedback(el)}\n          >\n            {el}\n          </button>\n        );\n      })}\n    </div>\n  );\n}\n\nFeedbackOptions.protoType = {\n  options: PropTypes.array,\n  onLeaveFeedback: PropTypes.func,\n};\n\nexport default FeedbackOptions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './Statistic.module.css';\n\nfunction Statistic({ good, neutral, bad, total, positivePercentage }) {\n  return (\n    <ul className={style.list}>\n      <li>Good: {good}</li>\n      <li>Neutral: {neutral}</li>\n      <li>Bad: {bad}</li>\n      <li>Total: {total}</li>\n      <li>\n        {/* PositiveFeedback:{' '}\n        {Number.isNaN(positivePercentage) ? 0 : positivePercentage} */}\n        Positive feedback: {positivePercentage}%\n      </li>\n    </ul>\n  );\n}\n\nStatistic.propTypes = {\n  title: PropTypes.string,\n  good: PropTypes.number,\n  neutral: PropTypes.number,\n  bad: PropTypes.number,\n};\n\nexport default Statistic;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './Section.module.css';\n\nfunction Section({ title, children }) {\n  return (\n    <section>\n      <h1 className={style.title}>{title}</h1>\n      {children}\n    </section>\n  );\n}\n\nSection.protoType = {\n  title: PropTypes.string,\n};\n\nexport default Section;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './Notification.module.css';\n\nfunction Notification({ message }) {\n  return <p className={style.text}>{message}</p>;\n}\n\nNotification.protoType = {\n  message: PropTypes.string,\n};\n\nexport default Notification;\n","import React from 'react';\nimport FeedbackOptions from 'components/Feedback/FeedbackOptions';\nimport Statistic from 'components/Statistic/Statistic';\nimport Section from 'components/Section/Section';\nimport Notification from 'components/Notification/Notification';\n\nclass Feedback extends React.Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  onLeaveFeedback = feedback => {\n    this.setState(prevState => ({\n      [feedback]: prevState[feedback] + 1,\n    }));\n  };\n\n  countTotalFeedback = () => {\n    return this.state.good + this.state.neutral + this.state.bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    return (\n      Math.round((this.state.good / this.countTotalFeedback()) * 1000) / 10\n    );\n  };\n\n  render() {\n    const keys = Object.keys(this.state);\n\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={keys}\n            onLeaveFeedback={this.onLeaveFeedback}\n          />\n        </Section>\n\n        <Section title=\"Statistics\">\n          {Number.isNaN(this.countPositiveFeedbackPercentage()) ? (\n            <Notification message=\"No feedback given\"></Notification>\n          ) : (\n            <Statistic\n              good={this.state.good}\n              neutral={this.state.neutral}\n              bad={this.state.bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default Feedback;\n","import './index.css';\nimport React from 'react';\nimport ReactDom from 'react-dom';\nimport App from './App';\n\nReactDom.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.querySelector('#root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__2zlV7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistic_list__kF5kE\"};"],"sourceRoot":""}